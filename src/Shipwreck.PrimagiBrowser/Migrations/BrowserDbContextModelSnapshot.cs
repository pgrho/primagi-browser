// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shipwreck.PrimagiBrowser.Models;

#nullable disable

namespace Shipwreck.PrimagiBrowser.Migrations
{
    [DbContext(typeof(BrowserDbContext))]
    partial class BrowserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Shipwreck.PrimagiBrowser.Models.CharacterRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("BirthDate")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("BirthMonth")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginUserKey")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Shipwreck.PrimagiBrowser.Models.CoordinateRecord", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SealId")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<byte>("Level")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharacterId", "SealId");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("Shipwreck.PrimagiBrowser.Models.PhotoRecord", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Seq")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlayDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbPath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ThumbUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("CharacterId", "Seq");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("Shipwreck.PrimagiBrowser.Models.CoordinateRecord", b =>
                {
                    b.HasOne("Shipwreck.PrimagiBrowser.Models.CharacterRecord", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Shipwreck.PrimagiBrowser.Models.PhotoRecord", b =>
                {
                    b.HasOne("Shipwreck.PrimagiBrowser.Models.CharacterRecord", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });
#pragma warning restore 612, 618
        }
    }
}
